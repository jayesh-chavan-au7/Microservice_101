version: '3.8'

services:
  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - outbox-network

  kafka:
    image: wurstmeister/kafka:latest
    container_name: kafka
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9094
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_LOG_DIRS: /kafka-logs
    ports:
      - "9094:9094"
    networks:
      - outbox-network
    depends_on:
      - zookeeper

  postgres:
    image: postgres:latest
    container_name: debezium-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5434:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data\
    networks:
      - outbox-network

  debezium:
    image: debezium/connect:latest
    container_name: debezium-connect
    environment:
      BOOTSTRAP_SERVERS: kafka:9092
      GROUP_ID: "1"
      CONFIG_STORAGE_TOPIC: "debezium_configs"
      OFFSET_STORAGE_TOPIC: "debezium_offsets"
      KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
    ports:
      - "8083:8083"
    networks:
      - outbox-network
    depends_on:
      - kafka

  kafdrop:
    image: obsidiandynamics/kafdrop
    container_name: kafdrop
    environment:
      KAFKA_BROKER_CONNECT: kafka:9092
    ports:
      - "9000:9000"
    networks:
      - outbox-network
    depends_on:
      - kafka

  debezium-ui:
    image: debezium/debezium-ui:latest
    container_name: debezium-ui
    environment:
      KAFKA_CONNECT_URIS: http://debezium-connect:8083
    ports:
      - "8080:8080"
    networks:
      - outbox-network
    depends_on:
      - debezium

  elasticsearch:
    image: elasticsearch:8.15.3
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms2g -Xmx2g
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - esdata:/usr/share/elasticsearch/data
    networks:
      - outbox-network

volumes:
  postgres_data:
  esdata:

networks:
  outbox-network:
